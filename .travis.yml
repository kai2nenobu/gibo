language: shell
#os:
#  - linux
#  - osx
#  - windows
#dist:
#  - bionic
#  - xenial
#  - trusty
#osx_image:
#  - xcode11
#  - xcode10.2
#  - xcode9.4
matrix:
  include:
    - os: linux
      dist: bionic
    - os: linux
      dist: xenial
    - os: linux
      dist: trusty
    - os: osx
      osx_image: xcode11
    - os: osx
      osx_image: xcode10.1
    - os: osx
      osx_image: xcode9.2
    - os: osx
      osx_image: xcode8.0
    - os: windows
      env: WSL=false
    - os: windows
      env: WSL=true

install:
  - |
    ## WSL preparation
    if [ "$WSL" = 'true' ]; then
      choco install -y lxrunoffline
      export PATH=$ChocolateyToolsLocation/lxrunoffline:$PATH
      ## Install WSL distribution
      name=ubuntu1804
      curl -L -o "$name.tar.gz" "https://lxrunoffline.apphb.com/download/Ubuntu/bionic"
      LxRunOffline install -n $name -d "${LOCALAPPDATA}\WSL\$name" -f "$name.tar.gz"
      ## Install git
      wsl bash -c 'apt update && apt install -y git'
    fi
before_script:
  - uname -a
  - env | sort
  - ls -l /bin/sh
  - /bin/sh --version || true # Allow failure
  - git --version
  # Print OS Version
  - if [ -e /etc/os-release ]; then cat /etc/os-release; fi
  - if which sw_vers > /dev/null 2>&1; then sw_vers; fi
  - if which cmd.exe > /dev/null 2>&1; then cmd.exe /C ver; fi
  - if [ "$WSL" = 'true' ]; then wsl cat //etc/os-release; fi
script:
  - ./gibo version
  # Measure performance
  - |
    if [ "$WSL" = 'true' ]; then
      wsl bash ./.travis/measure_list_performance.sh
    else
      ./.travis/measure_list_performance.sh
    fi
  # Output report
  - cat performance_new.txt
  - cat performance_old.txt
